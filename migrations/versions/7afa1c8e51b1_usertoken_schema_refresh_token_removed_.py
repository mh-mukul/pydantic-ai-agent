"""UserToken schema refresh token removed & expires_at updated with timezone

Revision ID: 7afa1c8e51b1
Revises: ad1b12f34f18
Create Date: 2025-07-04 01:47:49.860365

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7afa1c8e51b1'
down_revision: Union[str, None] = 'ad1b12f34f18'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user_tokens', 'expires_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.drop_constraint(op.f('user_tokens_token_key'), 'user_tokens', type_='unique')
    op.drop_column('user_tokens', 'token')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user_tokens', sa.Column('token', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.create_unique_constraint(op.f('user_tokens_token_key'), 'user_tokens', ['token'], postgresql_nulls_not_distinct=False)
    op.alter_column('user_tokens', 'expires_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    # ### end Alembic commands ###
